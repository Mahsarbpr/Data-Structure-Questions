/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {
        
        ListNode sumNode=new ListNode(0);
        int sumValue;
        int carry=0;
        var head=sumNode;
        
        if(l1==null)
            return l2;
        else if(l2==null)
            return l1;
        else{
            while(l1!=null && l2!=null){
                sumValue= l1.val+l2.val+carry;
                ListNode temp=new ListNode(sumValue%10);
                carry=sumValue/10;
                 sumNode.next=temp;
                l1=l1.next;
                l2=l2.next;
                sumNode=sumNode.next;
            }
            while(l1==null && l2!=null){
                sumValue=l2.val+carry;  
                ListNode temp=new ListNode(sumValue%10);
                carry=sumValue/10;
                sumNode.next=temp;
                carry=sumValue/10;
                sumNode=sumNode.next;
                l2=l2.next;
            }
            while(l2==null && l1!=null){
                sumValue=l1.val+carry;  
                ListNode temp=new ListNode(sumValue%10);
                carry=sumValue/10;
                sumNode.next=temp;
                sumNode=sumNode.next;
                l1=l1.next;
            }
        
       
        }
        return head.next;
    }
    
}

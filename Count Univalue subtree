/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public int count = 0;
    public bool IsValidUniSubtree(TreeNode root){
        if(root.left == null && root.right ==null)
        {
            count++;
            return true;
        }
        var is_uniVal = true;
        if(root.left != null)
            is_uniVal = IsValidUniSubtree(root.left) && root.left.val == root.val;
        
        if(root.right!=null)
            is_uniVal = IsValidUniSubtree(root.right) && is_uniVal && root.right.val == root.val;
        
        if(!is_uniVal) return false;
        count++;
        return true;
    }
    public int CountUnivalSubtrees(TreeNode root) {
        if(root == null) return 0;
        IsValidUniSubtree(root);
        return count;
    }
}

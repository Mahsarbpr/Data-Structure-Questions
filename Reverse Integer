public class Solution {
    public int Reverse(int x) {
       
       var intStack = new Queue<int>();
        var isNegative = false;
        if(x==-2147483648)
           return 0;
        if(x<0){
            isNegative = true;
            x=System.Math.Abs(x);
        }
        
        while(x>0){
            intStack.Enqueue( x%10 );
            x=x/10;
        }
        var sum=string.Empty;
        while(intStack.Count>0)
            sum+=intStack.Dequeue();
        sum = isNegative?"-"+sum : sum;
        try{
        return Int32.Parse(sum);
        }
        catch(Exception e){
            return 0;
        }
    }
}


//////Other way
public int reverse(int x) {
        int rev = 0;
        while (x != 0) {
            int pop = x % 10;
            x /= 10;
            if (rev > Integer.MAX_VALUE/10 || (rev == Integer.MAX_VALUE / 10 && pop > 7)) return 0;
            if (rev < Integer.MIN_VALUE/10 || (rev == Integer.MIN_VALUE / 10 && pop < -8)) return 0;
            rev = rev * 10 + pop;
        }
        return rev;
    }

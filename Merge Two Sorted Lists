//Recursive solution
public ListNode MergeTwoLists(ListNode l1, ListNode l2) {
    if(l1==null)
        return l2;
    else if(l2==null)
        return l1;
    else if(l1.val < l2.val){
        l1.next = MergeTwoLists(l1.next,l2);
        return l1;
    }
    else {
        l2.next = MergeTwoLists(l1,l2.next);
        return l2;
    }
    }


//Iterative solution
public ListNode MergeTwoLists(ListNode l1, ListNode l2) {
        
        var preHead = new ListNode(-1);
        var prev = preHead;
        //check if we modify preHead and return prev result is same => yes it is same
        while(l1!=null && l2!=null){
            if(l1.val < l2.val){
                prev.next = l1;
                l1 = l1.next;
            }
            else {
                prev.next = l2;
                l2 = l2.next;
            }
            prev = prev.next;
        }
        if(l1==null)
            prev.next = l2;
        else if(l2==null)
            prev.next = l1;
        return preHead.next;//why .next
    }

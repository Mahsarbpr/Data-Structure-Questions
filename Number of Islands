public class Solution {
    public int NumIslands(char[][] grid) {
        //edge cases
        if(grid == null || grid.Length ==0)
            return 0;
        
        var numOfIslands = 0;
        for(var i=0 ; i<grid.Length ; i++){
            for(var j=0 ; j<grid[0].Length ; j++){
                if(grid[i][j] == '1'){
                    numOfIslands += dfs(grid,i,j);
            }
            }
        }
        return numOfIslands;
    }
    
    public int dfs(char[][] grid, int i,int j){
        if(i<0 || i>=grid.Length || j<0 || j>=grid[i].Length || grid[i][j]=='0'){
            return 0;
        }
        grid[i][j]='0';
        dfs(grid,i+1,j);
        dfs(grid,i-1,j);
        dfs(grid,i,j+1);
        dfs(grid,i,j-1);
        return 1;
    }
}
